syntax = "proto2";
package tiger;

message SolverParameter{
    optional string net = 1;
    optional string train_net = 2;
    optional string test_net = 3;

    optional string type = 40 [default = "SGD"];
}

message NetState{
    optional Phase phase = 1;

}

message NetParameter{
    optional string name = 1;
    repeated LayerParameter layer = 2;
    optional NetState state = 3;
}

message BlobShape{
    repeated int64 dim = 1;
}

message BlobProto{
    optional int64 num = 1 [default = 0];
    optional int64 channels = 2 [default = 0];
    optional int64 height = 3 [default = 0];
    optional int64 width = 4 [default = 0];
    repeated float data = 5 [packed = true];
    repeated float diff = 6 [packed = true];
    repeated double double_data = 7 [packed = true];
    repeated double double_diff = 8 [packed = true];
    optional BlobShape shape = 9;
}

enum Phase{
    TRAIN = 0;
    TEST = 1;
}

enum Backend{
    TIGER = 0;
    CUDNN = 1;
}
message LayerParameter{
    optional string name = 1;
    optional string type = 2;
    repeated string bottom = 3;
    repeated string top = 4;

    optional Phase phase = 10;
    optional Backend backend = 190 [default = TIGER];

    repeated float loss_weight = 5;

    repeated BlobProto blobs = 6;
    optional TransformationParameter transform_param = 7;
    optional DataParameter data_param = 8;
    optional InnerProductParameter inner_param = 9;
    optional PoolingParameter pooling_param = 11;
    optional ReLUParameter relu_param = 12;
    optional DropoutParameter drop_param = 13;
    optional SoftmaxParameter softmax_param = 14;
}

message TransformationParameter{
    optional float scale = 1 [default = 1];
    optional bool mirror = 2 [default = false];
    optional uint32 crop_size = 3 [default = 0];
    optional string mean_file = 4;
    repeated float mean_value = 5;
    optional bool force_color = 6 [default = false];
    optional bool force_gray = 7 [default = false];
}

message DataParameter{
    optional string source = 1;
    optional bool forced_encoded_color = 2 [default = false];
    optional uint32 batch_size = 3;
    optional uint32 prefetch = 4 [default = 4];
}

message Datum{
    optional int32 channels = 1;
    optional int32 height = 2;
    optional int32 width = 3;
    optional bytes data = 4;
    optional int32 label = 5;
    repeated float float_data = 6;
    optional bool encoded = 7 [default = false];
    repeated ObjectLabel object_label = 8;
}

// 目标检测的标签类型
message ObjectLabel{
    optional string name = 1;
    optional int32 id = 2;
    optional float x1 = 3;
    optional float x2 = 4;
    optional float y1 = 5;
    optional float y2 = 6;
    optional float heigth = 7;
    optional float width = 8;
    optional float center_x = 9;
    optional float center_y = 10;
}


message FillerParameter{
    optional string type = 1 [default = "constant"];
    optional float value = 2 [default = 0];
    optional float min = 3 [default = 0];
    optional float max = 4 [default = 1];
    optional float mean = 5 [default = 0];
    optional float std = 6 [default = 1];
    
    optional int32 sparse = 7 [default = -1];
    enum VarianceNorm{
	FAN_IN = 0;
	FAN_OUT = 1;
	AVERAGE = 2;
    }
    optional VarianceNorm variance_norm = 8 [default = FAN_IN];

}

message InnerProductParameter{
    optional uint32 num_output = 1;
    optional bool bias_term = 2 [default = true];
    optional FillerParameter weight_filler = 3;
    optional FillerParameter bias_filler = 4;
    optional int32 axis = 5 [default = 1];
    optional bool transpose = 6 [default = false];
}

message PoolingParameter{
    enum PoolMethod{
	MAX = 0;
	AVE = 1;
	STOCHASTIC = 2;
    }
    optional PoolMethod method = 1 [default = MAX];
    optional uint32 pad_h = 2 [default = 0];
    optional uint32 pad_w = 3 [default = 0];
    optional uint32 kernel_h = 4;
    optional uint32 kernel_w = 5;
    optional uint32 stride_h = 6;
    optional uint32 stride_w = 7;
    
    enum RoundMode{
	CEIL = 0;
	FLOOR = 1;
    }
    optional RoundMode round_mode = 8 [default = CEIL];

}

message ReLUParameter{
// 这个如果不等于0的话应该是Leaky ReLU吧
optional float negative_slop = 1 [default = 0];
}

message DropoutParameter{
    optional float dropout_ratio = 1 [default = 0.5];
}

message SoftmaxParameter{
optional int32 axis = 1 [default = 1];
}

